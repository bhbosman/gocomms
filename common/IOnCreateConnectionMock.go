// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bhbosman/gocomms/common (interfaces: IOnCreateConnection)

// Package common is a generated GoMock package.
package common

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIOnCreateConnection is a mock of IOnCreateConnection interface.
type MockIOnCreateConnection struct {
	ctrl     *gomock.Controller
	recorder *MockIOnCreateConnectionMockRecorder
}

// MockIOnCreateConnectionMockRecorder is the mock recorder for MockIOnCreateConnection.
type MockIOnCreateConnectionMockRecorder struct {
	mock *MockIOnCreateConnection
}

// NewMockIOnCreateConnection creates a new mock instance.
func NewMockIOnCreateConnection(ctrl *gomock.Controller) *MockIOnCreateConnection {
	mock := &MockIOnCreateConnection{ctrl: ctrl}
	mock.recorder = &MockIOnCreateConnectionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIOnCreateConnection) EXPECT() *MockIOnCreateConnectionMockRecorder {
	return m.recorder
}

// OnCreateConnection mocks base method.
func (m *MockIOnCreateConnection) OnCreateConnection(arg0 string, arg1 error, arg2 context.Context, arg3 context.CancelFunc) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "OnCreateConnection", arg0, arg1, arg2, arg3)
}

// OnCreateConnection indicates an expected call of OnCreateConnection.
func (mr *MockIOnCreateConnectionMockRecorder) OnCreateConnection(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OnCreateConnection", reflect.TypeOf((*MockIOnCreateConnection)(nil).OnCreateConnection), arg0, arg1, arg2, arg3)
}

// argNames: [arg0 arg1 arg2 arg3]
// defaultArgs: [gomock.Any() gomock.Any() gomock.Any() gomock.Any()]
// defaultArgsAsString: gomock.Any(),gomock.Any(),gomock.Any(),gomock.Any()
// argTypes: [string error context.Context context.CancelFunc]
// argString: arg0 string, arg1 error, arg2 context.Context, arg3 context.CancelFunc
// rets: []
// retString:
// retString:
// ia: map[arg0:{} arg1:{} arg2:{} arg3:{}]
// idRecv: mr
// 1
func (mr *MockIOnCreateConnectionMockRecorder) OnOnCreateConnectionDoAndReturn(
	arg0, arg1, arg2, arg3 interface{},
	f func(arg0 string, arg1 error, arg2 context.Context, arg3 context.CancelFunc)) *gomock.Call {
	return mr.
		OnCreateConnection(arg0, arg1, arg2, arg3).
		DoAndReturn(f)
}

// 1
func (mr *MockIOnCreateConnectionMockRecorder) OnOnCreateConnectionDo(
	arg0, arg1, arg2, arg3 interface{},
	f func(arg0 string, arg1 error, arg2 context.Context, arg3 context.CancelFunc)) *gomock.Call {
	return mr.
		OnCreateConnection(arg0, arg1, arg2, arg3).
		Do(f)
}

// 1
func (mr *MockIOnCreateConnectionMockRecorder) OnOnCreateConnectionDoAndReturnDefault(
	f func(arg0 string, arg1 error, arg2 context.Context, arg3 context.CancelFunc)) *gomock.Call {
	return mr.
		OnCreateConnection(gomock.Any(), gomock.Any(), gomock.Any(), gomock.Any()).
		DoAndReturn(f)
}

// 1
func (mr *MockIOnCreateConnectionMockRecorder) OnOnCreateConnectionDoDefault(
	f func(arg0 string, arg1 error, arg2 context.Context, arg3 context.CancelFunc)) *gomock.Call {
	return mr.
		OnCreateConnection(gomock.Any(), gomock.Any(), gomock.Any(), gomock.Any()).
		Do(f)
}
